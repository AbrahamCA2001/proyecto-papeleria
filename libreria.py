# -*- coding: utf-8 -*-
"""libreria.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13gatUl1ydt8oEmuyaMts78v04CGJsBPs
"""

import pandas as pd
import sqlite3 as sql
from datetime import datetime, timedelta
import random as r
abcdario = [
    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
    'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',
    'U', 'V', 'W', 'X', 'Y', 'Z'
    ]
papelerias = [
    'Xochimilco', 'Cuemanco', 'Coapa', 'Milpa Alta',
    'CU', 'Zócalo', 'Narvarte', 'Santa Fé', 'Polanco',
    'Centro'
    ]
lineas = [
    'Cuadernos', 'Libretas', 'Lápices', 'Plumones', 'Borradores', 'Sacapuntas',
    'Laptops', 'Tablets', 'Mochilas', 'Bolsas', 'Cajas', 'Pegamento', 'Tijeras',
    'Monitores', 'Teclados', 'Mouse', 'Audífonos', 'Cables', 'Cargadores', 'Baterías',
    'Pc', 'Uniformes', 'Pinturas', 'Pinceles', 'Papel', 'Cartulinas'
    ]

def generar_df_ventas(fecha):
    # Generar número aleatorio de ventas, como se pide en el punto 3
    n_ventas = r.randint(1, 10000)

    # Resto del código
    fechas = []
    productos = []
    claves = []
    cantidades = []
    precios = []
    totales = []
    sucursales = []

    for i in range(n_ventas):
        producto = r.choice(lineas)
        clave = r.choice(abcdario) + r.choice(abcdario) + r.choice(abcdario) + '-' + str(r.randint(1, 9)) + str(r.randint(1, 9)) + str(r.randint(1, 9))
        cantidad = r.randint(1, 50)
        precio = round(r.randint(1, 10000) * r.random(), 2)
        total = round(precio * cantidad, 2)
        sucursal = r.choice(papelerias)

        fechas.append(fecha)
        productos.append(producto)
        claves.append(clave)
        cantidades.append(cantidad)
        precios.append(precio)
        totales.append(total)
        sucursales.append(sucursal)

    dict_pre_ventas = {
        "Fecha": fechas,
        "Producto": productos,
        "Clave": claves,
        "Cantidad": cantidades,
        "Precio": precios,
        "Total": totales,
        "Sucursal": sucursales
    }

    return pd.DataFrame(dict_pre_ventas)

def generar_ventas_fechas(fecha_inicio, fecha_fin, db_path):
    # Convertir strings a fechas inicial y final
    f_inicial = datetime.strptime(fecha_inicio, "%Y-%m-%d")
    f_final = datetime.strptime(fecha_fin, "%Y-%m-%d")
    ventasxdia = []  # Lista para dataframes de cada dia

    while f_inicial <= f_final:
        fecha = f_inicial.strftime("%Y-%m-%d")
        df_dia = generar_df_ventas(fecha) #corremos la función con la fecha actual
        ventasxdia.append(df_dia)
        f_inicial += timedelta(days=1)

    df_final = pd.concat(ventasxdia, ignore_index=True)

    # Conexión y carga a SQLite
    conn = sql.connect(db_path)
    df_final.to_sql("ventas", conn, if_exists="append", index=False)
    conn.close()

    print(f"¡Listo! Se generaron {len(df_final)} ventas entre {fecha_inicio} y {fecha_fin}.")